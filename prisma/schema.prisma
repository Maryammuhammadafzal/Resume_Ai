// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String   @id @default(uuid())
  clerkUserId    String   @unique //clerk user id
  email          String   @unique
  name           String?   
  imgUrl         String?   
  industry       String?   //Combined industry to sub industry

  industryInsight IndustryInsight? @relation(fields: [industry], references: [industry])
   createdAt     DateTime  @default(now())
   updatedAt     DateTime  @updatedAt

   //profile Feilds
   bio            String?
   experience     Int?
   skills         String[]  //Array of skils

   assessments     Assessments[]
   resume          Resume?
   coverLetter     CoverLetter[]

}

model Assessments {
  id             String   @id @default(cuid())
  userId         String   @unique
  user           User     @relation(fields: [userId], references: [id])
  quizScore      Float    //overall quiz quizScore 
  question       Json[]
  category       String
  improvementTip String? 

   createdAt     DateTime  @default(now())
   updatedAt     DateTime  @updatedAt

   @@index([userId])
}
model Resume {
  id             String   @id @default(cuid())          
  userId         String   @unique
  user           User     @relation(fields: [userId], references: [id])
  content        String   @db.Text
   createdAt     DateTime  @default(now())
   updatedAt     DateTime  @updatedAt
}
model CoverLetter {
  id             String   @id @default(cuid())
  userId         String   @unique
  user           User     @relation(fields: [userId], references: [id])
  content        String   
  jobDescription String 
  companyName    String
  jobTitle       String
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  @@index([userId])   
}

model IndustryInsight {
  id             String   @id @default(cuid()) 
  industry       String   @unique

  users           User[]

  salaryRanges    Json[]

  growthRates      Float
  demandLevel      DemandLevel
  topSkills        String[]


  marketOutlook      MarketOutlook
  keyTrends          String[]

  recommendedSkills  String[]

  lastUpdated         DateTime  @default(now())
  nextUpdate          DateTime 

  @@index([industry])  
}

enum DemandLevel {
  HIGH
  MEDIUM
  LOW
}

enum MarketOutlook {
  POSITIVE
  NEUTRAL
  NEGATIVE
}